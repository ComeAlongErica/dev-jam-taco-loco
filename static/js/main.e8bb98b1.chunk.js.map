{"version":3,"sources":["category/parts/AddToCart.jsx","category/parts/Item.jsx","category/Category.jsx","cart/parts/CartItem.jsx","cart/parts/CheckOut.jsx","cart/Cart.jsx","orderStatus/OrderStatus.jsx","utilis.js","App.js","index.js"],"names":["Item","handleClick","onClick","itemStyles","borderBottom","padding","display","infoStyles","width","item","addToCart","className","style","name","price","toFixed","discount_threshold","discount_percent","AddToCart","styles","border","margin","Category","items","category","map","key","id","CartItem","totalPrice","quantity","isDiscount","discountPrice","submitOrder","useState","userName","setUserName","error","setError","type","value","onChange","e","target","preventDefault","length","window","scrollTo","color","Cart","isEmpty","CheckOut","OrderStatus","status","orderStatus","orderReadyTime","getTotal","cart","total","forEach","containerStyles","flexWrap","catContainerStyles","flexGrow","App","menu","setMenuItems","setCart","setOrderStatus","useEffect","fetch","server","then","res","json","menuData","sortedMenu","categories","push","sortMenu","cartClone","itemIndex","findIndex","cartItem","doCatsExist","data","idx","orderData","body","customerName","orderItems","method","headers","JSON","stringify","catch","console","log","resp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8bb98b1.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Item = ({ handleClick }) => {\n  return (\n      <button onClick={handleClick} >Add To Order</button>\n  )\n}\n\nItem.propTypes = {\n  handleClick: PropTypes.func\n}\n\nexport default Item\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport AddToCart from './AddToCart'\n\nconst itemStyles = {\n  borderBottom: '1px solid grey',\n  padding: '10px',\n  display: 'flex'\n}\n\nconst infoStyles = {\n  width: '75%'\n}\n\nconst Item = ({ item, addToCart }) => {\n  return (\n    <div className='item' style={itemStyles}>\n      <div style={infoStyles}>\n        <h3>{item.name}</h3>\n        <p>Price: ${item.price.toFixed(2)}</p>\n        {item.discount_threshold && item.discount_percent && (\n          <p>\n            Promo: buy {item.discount_threshold} get {item.discount_percent}%\n            off!\n          </p>\n        )}\n      </div>\n      <AddToCart handleClick={() => addToCart(item)} />\n    </div>\n  )\n}\n\nItem.propTypes = {\n  item: PropTypes.object,\n  addToCart: PropTypes.func\n}\n\nexport default Item\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Item from './parts/Item'\n\nconst styles = { border: '1px solid', padding: '20px', margin: '20px'}\n\nconst Category = ({ items, addToCart }) => {\n  const name = items[0].category\n\n  return (\n    <div style={styles}>\n      <h2>{name}</h2>\n      {items.map(item => (\n        <Item key={item.id} item={item} addToCart={addToCart} />\n      ))}\n    </div>\n  )\n}\n\nCategory.propTypes = {\n  items: PropTypes.array,\n  addToCart: PropTypes.func\n}\n\nexport default Category\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  borderBottom: '1px solid grey',\n  padding: '10px',\n}\n\nconst CartItem = ({ item }) => {\n  const totalPrice = (item.price * item.quantity)\n  const isDiscount = item.quantity >= item.discount_threshold\n  const discountPrice = isDiscount ? (item.discount_percent / 100) * totalPrice : 0\n  return (\n      <div style={styles}>\n        <h3>{item.name}</h3>\n        <p>Price: ${(totalPrice - discountPrice).toFixed(2)}</p>\n        <p>quantity: {item.quantity}</p>\n        {isDiscount&& <p>Discount of {item.discount_percent}% is applied.</p>}\n      </div>\n  )\n}\n\nCartItem.propTypes = {\n  item: PropTypes.object\n}\n\nexport default CartItem\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Item = ({ submitOrder }) => {\n  const [userName, setUserName] = useState('')\n  const [error, setError] = useState(false)\n\n  const handleChange = e => {\n    setUserName(e.target.value)\n  }\n\n  const handleClick = e => {\n    e.preventDefault()\n    if (userName.length) {\n      submitOrder(userName)\n      setError(false)\n      window.scrollTo(0,0);\n    } else {\n      setError(true)\n    }\n  }\n\n  return (\n    <>\n      <form>\n        <label>\n          Name:\n          <input type='text' value={userName} onChange={handleChange} />\n        </label>\n        <button onClick={handleClick}>Check Out</button>\n      </form>\n      {error && <p style={{ color: 'red' }}>Add name to order to continue</p>}\n    </>\n  )\n}\n\nItem.propTypes = {\n  submitOrder: PropTypes.func\n}\n\nexport default Item\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport CartItem from './parts/CartItem'\nimport CheckOut from './parts/CheckOut'\n\nconst styles = { border: '1px solid', padding: '20px', margin: '20px', width: '40%' }\n\nconst Cart = ({ items, submitOrder }) => {\n  const isEmpty = items.length === 0 \n  return (\n    <div style={styles}>\n      <h2>Your Cart</h2>\n      {isEmpty && <p>Add something to your cart.</p>}\n      {!isEmpty && items.map(item => (\n        <CartItem key={item.id} item={item} />\n      ))}\n      {!isEmpty && <CheckOut submitOrder={submitOrder} />}\n    </div>\n  )\n}\n\nCart.propTypes = {\n  items: PropTypes.array,\n  submitOrder: PropTypes.func\n}\n\nexport default Cart\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst styles = { border: '1px solid', padding: '20px', margin: '20px', width: '100%' }\n\nconst OrderStatus = ({ status }) => {\n  return (\n    <div style={styles}>\n      <h2>Status of Order: {status.orderStatus}</h2>\n      <h2>Order Will Be Ready At: {status.orderReadyTime}</h2>\n    </div>\n  )\n}\n\nOrderStatus.propTypes = {\n  status: PropTypes.object\n}\n\nexport default OrderStatus\n","const server =\n  'https://virtserver.swaggerhub.com/Detroit_Labs/Taco_Truck/1.0.0/'\n\nconst sortMenu = menu => {\n  let sortedMenu = { categories: [] }\n\n  menu.forEach(item => {\n    const category = item.category\n\n    // if category doesn't exist yet, create it, then push to array\n    if (!sortedMenu[category]) {\n      sortedMenu.categories.push(category)\n      sortedMenu[category] = []\n    }\n    sortedMenu[category].push(item)\n  })\n\n  return sortedMenu\n}\n\nconst getMenu = () => {\n  const url = server + 'menu'\n  return window\n    .fetch(url)\n    .then(res => res.json().then(menuData => sortMenu(menuData)))\n}\n\nconst postOrder = orderData => {\n  const url = server + 'order'\n  return window\n    .fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(orderData)\n    })\n    .then(res => res.json())\n    .catch(error => console.log('error: ', error))\n}\n\nconst getTotal = cart => {\n  let total = 0\n  cart.forEach(item => {\n    const totalPrice = item.price * item.quantity\n    const isDiscount = item.quantity >= item.discount_threshold\n    const discountPrice = isDiscount\n      ? (item.discount_percent / 100) * totalPrice\n      : 0\n    total += totalPrice - discountPrice\n  })\n  return total\n}\n\nexport { getMenu, postOrder, getTotal }\n","import React, { useEffect, useState } from 'react'\n\nimport Category from './category/Category'\nimport Cart from './cart/Cart'\nimport OrderStatus from './orderStatus/OrderStatus'\nimport { getMenu, postOrder, getTotal } from './utilis'\n\nconst containerStyles = { display: 'flex', flexWrap: 'wrap' }\nconst catContainerStyles = { width: '40%', flexGrow: 1 }\n\nfunction App () {\n  const [menu, setMenuItems] = useState({})\n  const [cart, setCart] = useState([])\n  const [orderStatus, setOrderStatus] = useState()\n\n  useEffect(() => {\n    getMenu().then(menu => setMenuItems(menu))\n  }, [])\n\n  const addToCart = item => {\n    let cartClone = [...cart]\n    const itemIndex = cartClone.findIndex(\n      cartItem => cartItem.name === item.name\n    )\n    if (itemIndex === -1) {\n      item.quantity = 1\n      cartClone.push(item)\n    } else {\n      cartClone[itemIndex].quantity++\n    }\n    setCart(cartClone)\n  }\n\n  const submitOrder = userName => {\n    let body = {\n      customerName: userName,\n      totalPrice: getTotal(cart),\n      orderItems: cart\n    }\n    postOrder(body).then(resp => setOrderStatus(resp))\n  }\n\n  const doCatsExist = menu.categories && menu.categories.length\n\n  return (\n    <div style={containerStyles}>\n      {orderStatus && <OrderStatus status={orderStatus} />}\n      <div style={catContainerStyles}>\n        {!doCatsExist && <p>Please wait...</p>}\n        {doCatsExist &&\n          menu.categories.map((data, idx) => (\n            <Category key={idx} items={menu[data]} addToCart={addToCart} />\n          ))}\n      </div>\n      <Cart items={cart} submitOrder={submitOrder} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}